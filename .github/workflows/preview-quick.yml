# ------------------------------------------------------------
# Onyx PR Preview (Quick Cloudflare Tunnel, default runner)
# ------------------------------------------------------------
name: PR Preview

on:
  pull_request:
    types: [opened, reopened, synchronize]   # re-run on each push
    branches: [main]                         # change if your default branch != main

concurrency:
  group: pr-preview-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  preview:
    runs-on: ubuntu-latest                   # free 2-core runner
    timeout-minutes: 45

    env:
      IMAGE_TAG: ci
      STACK_NAME: onyx-${{ github.event.pull_request.number }}

    steps:
    # 1 ‚Äì checkout repo
    - uses: actions/checkout@v4

    # 2 ‚Äì free ~10 GB on the disk
    - name: Reclaim disk space
      # üîß changed tag: v1 ‚ûú main (or use v1.3.0)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        large-packages: true

    # 3 ‚Äì set up cloudflared
    - uses: AnimMouse/setup-cloudflared@v2

    # 4 ‚Äì build images & start stack (model servers turned off)
    - name: Build and start stack
      run: |
        IMAGE_TAG=${IMAGE_TAG} \
        DISABLE_MODEL_SERVER=true \
        docker compose -f deployment/docker_compose/docker-compose.dev.yml \
          --project-name ${STACK_NAME} \
          up -d --build \
          --scale indexing_model_server=0   # extra GB saved

    # 5 ‚Äì wait for health endpoint
    - name: Wait for health check
      run: |
        for i in {1..60}; do
          curl -sf http://localhost:8080/health && exit 0
          echo "not ready yet"; sleep 5
        done
        echo "Service never became healthy"; exit 1

    # 6 ‚Äì quick Cloudflare tunnel ‚Üí capture random URL
    - name: Launch Cloudflare Quick Tunnel
      id: tunnel
      run: |
        nohup cloudflared tunnel --url http://localhost:80 --no-autoupdate > cf.log 2>&1 &
        for i in {1..30}; do
          url=$(grep -oE 'https://[0-9a-z-]+\.trycloudflare\.com' cf.log | head -n 1)
          if [ -n "$url" ]; then
            echo "Found URL: $url"
            echo "preview_url=$url" >> $GITHUB_OUTPUT
            break
          fi
          sleep 2
        done
        [ -n "$url" ] || (echo "Tunnel never returned a URL" && exit 1)

    # 7 ‚Äì comment the URL on the pull-request
    - uses: actions/github-script@v7
      env:
        PREVIEW_URL: ${{ steps.tunnel.outputs.preview_url }}
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `üåê **Preview ready:** ${process.env.PREVIEW_URL}`
          })

    # 8 ‚Äì Playwright E2E tests
    - name: Install Node dependencies
      working-directory: web
      run: |
        npm ci
        npx playwright install --with-deps

    - name: Run Playwright tests
      working-directory: web
      env:
        PREVIEW_URL: ${{ steps.tunnel.outputs.preview_url }}
      run: npx playwright test

    # 9 ‚Äì always shut everything down
    - name: Shutdown stack
      if: always()
      run: |
        docker compose -f deployment/docker_compose/docker-compose.dev.yml \
          --project-name ${STACK_NAME} down -v

